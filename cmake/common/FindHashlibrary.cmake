set(HASHLIBRARY_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/include)

find_library(
  HASHLIBRARY_LIBRARIES_RELEASE hash-library
  PATHS ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/lib REQUIRED
  NO_DEFAULT_PATH)

find_library(
  HASHLIBRARY_LIBRARIES_DEBUG hash-libray
  PATHS ${CMAKE_SOURCE_DIR}/vcpkg_installed/${TRIPLET}/debug/lib REQUIRED
  NO_DEFAULT_PATH)

mark_as_advanced(HASHLIBRARY_INCLUDE_DIR HASHLIBRARY_LIBRARIES_RELEASE HASHLIBRARY_LIBRARIES_DEBUG)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Hashlibrary REQUIRED_VARS HASHLIBRARY_INCLUDE_DIR HASHLIBRARY_LIBRARIES_RELEASE
                                                            HASHLIBRARY_LIBRARIES_DEBUG)

if(HASHLIBRARY_FOUND AND NOT TARGET Hashlibrary::hashlibrary)
  add_library(Hashlibrary::hashlibrary UNKNOWN IMPORTED)
  set_target_properties(
    Hashlibrary::hashlibrary
    PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES CXX
               IMPORTED_LOCATION ${HASHLIBRARY_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_RELEASE ${HASHLIBRARY_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_DEBUG ${HASHLIBRARY_LIBRARIES_DEBUG}
               IMPORTED_LOCATION_RELWITHDEBINFO ${HASHLIBRARY_LIBRARIES_RELEASE}
               IMPORTED_LOCATION_MINSIZEREL ${HASHLIBRARY_LIBRARIES_RELEASE}
               INTERFACE_INCLUDE_DIRECTORIES ${HASHLIBRARY_INCLUDE_DIR})
endif()
